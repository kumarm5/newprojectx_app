# Generated by Django 2.1.4 on 2018-12-21 13:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import projectx_app.models.user


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('mobile_number', models.CharField(blank=True, max_length=20, verbose_name='mobile number')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'applicant'), (2, 'companyadmin'), (3, 'vendor'), (4, 'caseworker'), (5, 'rpo'), (6, 'companyuser')], null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
            },
            managers=[
                ('objects', projectx_app.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AddressInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permanentAddressSame', models.BooleanField(default=False)),
                ('temp_addressLine1', models.CharField(blank=True, max_length=256, null=True)),
                ('temp_addressLine2', models.CharField(blank=True, max_length=256, null=True)),
                ('temp_city', models.CharField(blank=True, max_length=256, null=True)),
                ('temp_postalCode', models.IntegerField(blank=True, null=True)),
                ('perm_addressLine1', models.CharField(blank=True, max_length=256, null=True)),
                ('perm_addressLine2', models.CharField(blank=True, max_length=256, null=True)),
                ('perm_city', models.CharField(blank=True, max_length=256, null=True)),
                ('perm_postalCode', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Address Infos',
                'verbose_name': 'Address Info',
            },
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Applicants',
                'verbose_name': 'Applicant',
            },
        ),
        migrations.CreateModel(
            name='CompanyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='companyuser_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Company Users',
                'verbose_name': 'Company User',
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primaryEmail', models.EmailField(blank=True, max_length=256, null=True)),
                ('alternateEmail', models.EmailField(blank=True, max_length=256, null=True)),
                ('mobileNumber', models.CharField(blank=True, max_length=256, null=True)),
                ('workNumber', models.CharField(blank=True, max_length=256, null=True)),
                ('homeNumber', models.CharField(blank=True, max_length=256, null=True)),
                ('preferredNumber', models.CharField(blank=True, max_length=256, null=True)),
                ('preferredEmail', models.EmailField(blank=True, max_length=256, null=True)),
                ('preferredNumbermobile', models.BooleanField(default=False)),
                ('preferredNumberwork', models.BooleanField(default=False)),
                ('preferredNumberhome', models.BooleanField(default=False)),
                ('preferredPrimaryEmail', models.BooleanField(default=False)),
                ('preferredAlternateEmail', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Contact Infos',
                'verbose_name': 'Contact Info',
            },
        ),
        migrations.CreateModel(
            name='CoOnboardingTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_id', models.CharField(blank=True, max_length=256, null=True, verbose_name='Step Id')),
                ('task_name', models.CharField(max_length=256, verbose_name='Task Name')),
                ('comment', models.TextField(verbose_name='Comment')),
                ('due_date', models.CharField(max_length=100, verbose_name='Due Date')),
            ],
            options={
                'verbose_name_plural': 'Company On-Boarding Tasks',
                'verbose_name': 'Company On-Boarding Task',
            },
        ),
        migrations.CreateModel(
            name='CoOnboardingTaskBGV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('co_onboarding_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding_bgv_task', to='projectx_app.CoOnboardingTask')),
            ],
            options={
                'verbose_name_plural': 'Company On-Boarding BGVs',
                'verbose_name': 'Company On-Boarding BGV',
            },
        ),
        migrations.CreateModel(
            name='CoOnboardingTaskHrForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('onboarding_hr_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding_hr_task', to='projectx_app.CoOnboardingTask')),
            ],
            options={
                'verbose_name_plural': 'Company On-Boarding BGVs',
                'verbose_name': 'Company On-Boarding BGV',
            },
        ),
        migrations.CreateModel(
            name='CoOnboardingTaskRefCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_of_references', models.CharField(max_length=5, verbose_name='Number of Reference')),
                ('onboarding_ref_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding_ref_task', to='projectx_app.CoOnboardingTask')),
            ],
            options={
                'verbose_name_plural': 'Company On-Boarding BGVs',
                'verbose_name': 'Company On-Boarding BGV',
            },
        ),
        migrations.CreateModel(
            name='CoOnboardingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('co_onboarding_type_name', models.CharField(max_length=256, verbose_name='On-Boarding Type Name')),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='onboard_company', to='projectx_app.CompanyUser')),
            ],
            options={
                'verbose_name_plural': 'Company Onboarding Types',
                'verbose_name': 'Company Onboarding Type',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Country Name')),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'verbose_name': 'Country',
            },
        ),
        migrations.CreateModel(
            name='CountryCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code_name', models.CharField(max_length=256, verbose_name='Company Code')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='country_code', to='projectx_app.Country')),
            ],
            options={
                'verbose_name_plural': 'Country Codes',
                'verbose_name': 'Country Code',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_in_document', models.CharField(blank=True, max_length=256, null=True, verbose_name='Name appear in the document')),
                ('issued_by', models.CharField(blank=True, max_length=256, null=True, verbose_name='Issued By')),
                ('date_of_issue', models.CharField(blank=True, max_length=256, null=True, verbose_name='Date Of Issue')),
                ('valid_till', models.CharField(blank=True, max_length=256, null=True, verbose_name='Valid Till')),
                ('city', models.CharField(blank=True, max_length=256, null=True, verbose_name='City')),
                ('is_deleted', models.BooleanField(default=False)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='counties', to='projectx_app.Country')),
            ],
            options={
                'verbose_name_plural': 'Documents',
                'verbose_name': 'Document',
            },
        ),
        migrations.CreateModel(
            name='DocumentFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.FileField(blank=True, null=True, upload_to='document_files/', verbose_name='File Name')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document', to='projectx_app.Document')),
            ],
            options={
                'verbose_name_plural': 'Document Files',
                'verbose_name': 'Document File',
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Document Type Name')),
            ],
            options={
                'verbose_name_plural': 'Document Types',
                'verbose_name': 'Document Type',
            },
        ),
        migrations.CreateModel(
            name='DocumentTypeName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Document Name')),
                ('documenttype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_type', to='projectx_app.DocumentType')),
            ],
            options={
                'verbose_name_plural': 'Document Type Names',
                'verbose_name': 'Document Type Name',
            },
        ),
        migrations.CreateModel(
            name='EducationInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university', models.CharField(blank=True, max_length=256, null=True)),
                ('college', models.CharField(blank=True, max_length=256, null=True)),
                ('from_f', models.DateField(blank=True, max_length=256, null=True)),
                ('to', models.DateField(blank=True, max_length=256, null=True)),
                ('grade', models.CharField(blank=True, max_length=256, null=True)),
                ('cca', models.CharField(blank=True, max_length=256, null=True)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('documentPath', models.CharField(blank=True, max_length=256, null=True)),
                ('documentSize', models.IntegerField(blank=True, null=True)),
                ('document', models.FileField(blank=True, null=True, upload_to='degree/')),
                ('is_deleted', models.BooleanField(default=False)),
                ('degree', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='education_degree', to='projectx_app.DocumentTypeName')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_education_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Education Infos',
                'verbose_name': 'Education Info',
            },
        ),
        migrations.CreateModel(
            name='GovernmentIssuedIDs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idName', models.CharField(blank=True, max_length=256, null=True)),
                ('idSize', models.IntegerField(blank=True, null=True)),
                ('idNumber', models.CharField(blank=True, max_length=256, null=True)),
                ('issueDate', models.DateField(blank=True, max_length=256, null=True)),
                ('expiryDate', models.DateField(blank=True, max_length=256, null=True)),
                ('issueCity', models.CharField(blank=True, max_length=256, null=True)),
                ('documentId', models.CharField(blank=True, max_length=256, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='government_id_countries', to='projectx_app.Country')),
            ],
            options={
                'verbose_name_plural': 'Government Issued Id Infos',
                'verbose_name': 'Government Issued Id Info',
            },
        ),
        migrations.CreateModel(
            name='IDDocumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Document Name')),
            ],
            options={
                'verbose_name_plural': 'ID Document Types',
                'verbose_name': 'ID Document Type',
            },
        ),
        migrations.CreateModel(
            name='MyRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_request', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_task', to='projectx_app.CoOnboardingTask')),
            ],
            options={
                'verbose_name_plural': 'My Requests',
                'verbose_name': 'My Request',
            },
        ),
        migrations.CreateModel(
            name='MyRequestTasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_due_date', models.CharField(blank=True, max_length=256, null=True)),
                ('myrequest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_request', to='projectx_app.MyRequest')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_task', to='projectx_app.CoOnboardingTask')),
            ],
            options={
                'verbose_name_plural': 'My Request Tasks',
                'verbose_name': 'My Request Task',
            },
        ),
        migrations.CreateModel(
            name='MyRequestTasksBgvDocs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark_complete', models.BooleanField(default=False, verbose_name='Mark Complete')),
                ('document_name', models.FileField(blank=True, null=True, upload_to='', verbose_name='Document Name')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_request_document', to='projectx_app.DocumentTypeName')),
                ('myrequest_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_request_task', to='projectx_app.MyRequestTasks')),
            ],
            options={
                'verbose_name_plural': 'My Request Documents',
                'verbose_name': 'My Request Document',
            },
        ),
        migrations.CreateModel(
            name='MyRequestTasksHrDocs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark_complete', models.BooleanField(default=False, verbose_name='Mark Complete')),
                ('document_name', models.FileField(blank=True, null=True, upload_to='', verbose_name='Document Name')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_hr_document', to='projectx_app.DocumentTypeName')),
                ('myrequest_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_hr_task', to='projectx_app.MyRequestTasks')),
            ],
            options={
                'verbose_name_plural': 'My Request Hr Documents',
                'verbose_name': 'My Request Hr Document',
            },
        ),
        migrations.CreateModel(
            name='MyRequestTasksRefDocs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark_complete', models.BooleanField(default=False, verbose_name='Mark Complete')),
                ('ref_name', models.CharField(blank=True, max_length=256, null=True)),
                ('ref_organisation', models.CharField(blank=True, max_length=256, null=True)),
                ('ref_office_email', models.CharField(blank=True, max_length=256, null=True)),
                ('ref_relation', models.CharField(blank=True, max_length=256, null=True)),
                ('myrequest_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_ref_task', to='projectx_app.MyRequestTasks')),
            ],
            options={
                'verbose_name_plural': 'My Request Reference Details',
                'verbose_name': 'My Request Reference Detail',
            },
        ),
        migrations.CreateModel(
            name='PersonalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('middleName', models.CharField(blank=True, max_length=256, null=True)),
                ('salutation', models.CharField(blank=True, max_length=256, null=True)),
                ('dateOfBirth', models.DateField(blank=True, max_length=256, null=True)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=256, null=True)),
                ('maritalStatus', models.CharField(blank=True, choices=[('MARRIED', 'Married'), ('UNMARRIED', 'Unmarried')], max_length=256, null=True)),
                ('nameChanged', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('previousName', models.CharField(blank=True, max_length=256, null=True)),
                ('previousNameStatus', models.BooleanField(blank=True, default=False, null=True)),
                ('beforeMarriage', models.CharField(blank=True, max_length=256, null=True)),
                ('fatherFirstName', models.CharField(blank=True, max_length=256, null=True)),
                ('fatherMiddleName', models.CharField(blank=True, max_length=256, null=True)),
                ('fatherLastName', models.CharField(blank=True, max_length=256, null=True)),
                ('motherFirstName', models.CharField(blank=True, max_length=256, null=True)),
                ('motherMiddleName', models.CharField(blank=True, max_length=256, null=True)),
                ('motherLastName', models.CharField(blank=True, max_length=256, null=True)),
                ('spouseFirstName', models.CharField(blank=True, max_length=256, null=True)),
                ('spouseMiddleName', models.CharField(blank=True, max_length=256, null=True)),
                ('spouseLastName', models.CharField(blank=True, max_length=256, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_personal_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Personal Infos',
                'verbose_name': 'Personal Info',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='State Name')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='country', to='projectx_app.Country')),
            ],
            options={
                'verbose_name_plural': 'States',
                'verbose_name': 'State',
            },
        ),
        migrations.CreateModel(
            name='SysRefCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_name', models.CharField(max_length=50, verbose_name='Number of Reference')),
            ],
            options={
                'verbose_name_plural': 'System Reference Checks',
                'verbose_name': 'System Reference Check',
            },
        ),
        migrations.CreateModel(
            name='SysRpo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rpo_id', models.CharField(blank=True, max_length=15, null=True, verbose_name='RPO ID')),
                ('rpo_company_name', models.CharField(max_length=256, verbose_name='Company Name')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('phone_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('company_admin', models.CharField(blank=True, max_length=256, null=True, verbose_name='Company Administrator')),
                ('area_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Area Code')),
                ('number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Number')),
                ('email', models.EmailField(blank=True, max_length=80, null=True, verbose_name='Email')),
                ('annual_contract_value', models.CharField(blank=True, max_length=50, null=True, verbose_name='Annual Contract Value')),
                ('contract_start_date', models.CharField(blank=True, max_length=30, null=True, verbose_name='Contract Start Date')),
                ('contract_end_date', models.CharField(blank=True, max_length=30, null=True, verbose_name='Contract End Date')),
                ('upload_contract', models.FileField(blank=True, null=True, upload_to='', verbose_name='Upload Contract')),
                ('tax_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Upload Contract')),
                ('contract_status', models.BooleanField(blank=True, choices=[(True, 'Active'), (False, 'Inactive')], max_length=256, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rpo_country', to='projectx_app.Country')),
                ('country_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country_code', to='projectx_app.CountryCode')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rpo_owner', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sys_rpo_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Recruitment Process Outsources',
                'verbose_name': 'Recruitment Process Outsource',
            },
        ),
        migrations.CreateModel(
            name='SystemCompanySetup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_id', models.CharField(blank=True, max_length=15, null=True, verbose_name='Company ID')),
                ('company_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Company Name')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('phone_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('company_admin', models.CharField(blank=True, max_length=256, null=True, verbose_name='Company Administrator')),
                ('area_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Area Code')),
                ('number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Number')),
                ('email', models.EmailField(blank=True, max_length=80, null=True, verbose_name='Email')),
                ('annual_contract_value', models.CharField(blank=True, max_length=50, null=True, verbose_name='Annual Contract Value')),
                ('contract_start_date', models.DateField(blank=True, max_length=30, null=True, verbose_name='Contract Start Date')),
                ('contract_end_date', models.DateField(blank=True, max_length=30, null=True, verbose_name='Contract End Date')),
                ('upload_contract', models.FileField(blank=True, null=True, upload_to='', verbose_name='Upload Contract')),
                ('tax_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Upload Contract')),
                ('contract_status', models.BooleanField(blank=True, choices=[(True, 'Active'), (False, 'Inactive')], max_length=256, null=True)),
                ('rpo_provider', models.BooleanField(blank=True, default=False, null=True, verbose_name='RPO Provider')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_country', to='projectx_app.Country')),
                ('country_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_country_code', to='projectx_app.CountryCode')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_owner', to=settings.AUTH_USER_MODEL)),
                ('rpo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_rpo', to='projectx_app.SysRpo')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_setup_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'System Company Setups',
                'verbose_name': 'System Company Setup',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(max_length=100)),
                ('template_status', models.BooleanField(blank=True, choices=[(True, 'Active'), (False, 'Inactive')], max_length=20, null=True)),
                ('template_doc', models.FileField(blank=True, null=True, upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_delete', models.BooleanField(blank=True, default=False, null=True, verbose_name='Delete Status')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='template_company', to='projectx_app.CompanyUser')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='template_owner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Templates',
                'verbose_name': 'Template',
            },
        ),
        migrations.CreateModel(
            name='TemplateType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_type_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Template Types',
                'verbose_name': 'Template Type',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_id', models.CharField(blank=True, max_length=15, null=True, verbose_name='Vendor ID')),
                ('vendor_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Vendor Name')),
                ('phone_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=80, null=True, verbose_name='Email')),
                ('status', models.BooleanField(blank=True, choices=[(True, 'Active'), (False, 'Inactive')], max_length=20, null=True)),
                ('upload_contract', models.FileField(blank=True, null=True, upload_to='', verbose_name='Upload Contract')),
                ('contract_start_date', models.DateField(blank=True, max_length=30, null=True, verbose_name='Contract Start Date')),
                ('contract_end_date', models.DateField(blank=True, max_length=30, null=True, verbose_name='Contract End Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_owner', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Vendors',
                'verbose_name': 'Vendor',
            },
        ),
        migrations.CreateModel(
            name='WorkInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume', models.FileField(blank=True, null=True, upload_to='resume/')),
                ('companyName', models.CharField(blank=True, max_length=256, null=True)),
                ('position', models.CharField(blank=True, max_length=256, null=True)),
                ('location', models.CharField(blank=True, max_length=256, null=True)),
                ('from_f', models.DateField(blank=True, max_length=256, null=True)),
                ('to', models.DateField(blank=True, max_length=256, null=True)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('basePay', models.CharField(blank=True, max_length=256, null=True)),
                ('ctc', models.CharField(blank=True, max_length=256, null=True)),
                ('currency', models.CharField(blank=True, max_length=256, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_countries', to='projectx_app.Country')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_work_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Work Infos',
                'verbose_name': 'Work Info',
            },
        ),
        migrations.AddField(
            model_name='template',
            name='template_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='template_type', to='projectx_app.TemplateType'),
        ),
        migrations.AddField(
            model_name='myrequesttasksrefdocs',
            name='reference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_reference', to='projectx_app.SysRefCheck'),
        ),
        migrations.AddField(
            model_name='governmentissuedids',
            name='document_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='government_document_type', to='projectx_app.IDDocumentType'),
        ),
        migrations.AddField(
            model_name='governmentissuedids',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='government_id_states', to='projectx_app.State'),
        ),
        migrations.AddField(
            model_name='governmentissuedids',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_government_ids_info', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='document',
            name='document_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_type_name', to='projectx_app.DocumentTypeName'),
        ),
        migrations.AddField(
            model_name='document',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='states', to='projectx_app.State'),
        ),
        migrations.AddField(
            model_name='document',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coonboardingtaskrefcheck',
            name='reference_check',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding_sys_ref', to='projectx_app.SysRefCheck'),
        ),
        migrations.AddField(
            model_name='coonboardingtaskhrform',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding_hr_templates', to='projectx_app.Template'),
        ),
        migrations.AddField(
            model_name='coonboardingtaskbgv',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding_bgv_document', to='projectx_app.DocumentTypeName'),
        ),
        migrations.AddField(
            model_name='coonboardingtask',
            name='co_onboarding_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding_type', to='projectx_app.CoOnboardingType'),
        ),
        migrations.AddField(
            model_name='coonboardingtask',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding_vendor', to='projectx_app.Vendor'),
        ),
        migrations.AddField(
            model_name='contactinfo',
            name='homeNumberCode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='home_number_code', to='projectx_app.CountryCode'),
        ),
        migrations.AddField(
            model_name='contactinfo',
            name='mobileNumberCode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mobile_number_code', to='projectx_app.CountryCode'),
        ),
        migrations.AddField(
            model_name='contactinfo',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_contact_info', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contactinfo',
            name='workNumberCode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_number_code', to='projectx_app.CountryCode'),
        ),
        migrations.AddField(
            model_name='companyuser',
            name='system_company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_setup_user', to='projectx_app.SystemCompanySetup'),
        ),
        migrations.AddField(
            model_name='companyuser',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='addressinfo',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_address_info', to='projectx_app.ContactInfo'),
        ),
        migrations.AddField(
            model_name='addressinfo',
            name='perm_country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_perm_country', to='projectx_app.Country'),
        ),
        migrations.AddField(
            model_name='addressinfo',
            name='perm_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_perm_state', to='projectx_app.State'),
        ),
        migrations.AddField(
            model_name='addressinfo',
            name='temp_country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_temp_country', to='projectx_app.Country'),
        ),
        migrations.AddField(
            model_name='addressinfo',
            name='temp_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_temp_state', to='projectx_app.State'),
        ),
    ]
